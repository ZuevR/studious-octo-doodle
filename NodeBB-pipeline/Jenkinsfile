/**
 *  Name: NodeBB Pipeline
 *  Made from "NodeBB Forum-Tag" & "NodeBB Forum"
 *
 *  NOTES: 
 *  - Repo git@github.com:funi-main/funimation-nodebb.git doesn't contain branch "develop"
 *    You will get an error if you choose "develop" as a variable for $WORK_BRANCH
 *
 *  - All unsafe operations related to build/run/deploy commands weren't launched/tested
 *
 *  - To affect the real infrastructure, you need to remove the comments:
 *    "// ..." and /* ... * / - in pipeline syntax
 *    # ... - in bash syntax
 */

pipeline {
    agent any

    stages {
        stage('Prepare ENV') {
            steps {
                script {
                    if ("${tagToCreate}".isEmpty()) {
                        throw new Exception("tagToCreate field is missing, please check")
                    }

                    if ("${WORK_BRANCH}" == "develop") {
                        env.JGIT_TAG = "${tagToCreate}.${BUILD_NUMBER}.fun-nodebb-dev"
                    } else if ("${WORK_BRANCH}" == "qa") {
                        env.JGIT_TAG = "${tagToCreate}.${BUILD_NUMBER}.fun-nodebb-qa"
                    } else if ("${WORK_BRANCH}" == "uat") {
                        env.JGIT_TAG = "${tagToCreate}.${BUILD_NUMBER}.fun-nodebb-uat"
                    } else if ("${WORK_BRANCH}" == "prod") {
                        env.JGIT_TAG = "${tagToCreate}.${BUILD_NUMBER}.fun-nodebb-pre-prod"
                    } else {
                        echo "WORK_BRANCH field is missing, please check"
                        exit 1
                    }
                    env.DOCKER_BUILD = "${ECR_URL}/${APP_NAME}-${WORK_BRANCH}"
                }
            }
        }

        stage('Set tags') {
            steps {
                dir('forum') {
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/${WORK_BRANCH}']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'WipeWorkspace']],
                        submoduleCfg: [],
                        userRemoteConfigs: [
                            [credentialsId: "${GIT_CREDS}", url: 'git@github.com:funi-main/funimation-nodebb.git']
                        ]
                    ])

                    sh 'git tag -a -f ${JGIT_TAG} -m "Creating version from ${BUILD_URL}"'
                    //sshagent(["${GIT_CREDS}"]) {
                    //   sh "git push git@github.com:funi-main/funimation-nodebb.git ${JGIT_TAG}"
                    //}
                }

                dir('source2-main') {
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/venue']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                            [
                                $class: 'SparseCheckoutPaths',
                                sparseCheckoutPaths: [
                                    [ $class: 'SparseCheckoutPath', path: 'nodebb/' ]
                                ]
                            ],
                            [$class: 'LocalBranch', localBranch: "**"]
                        ],
                        submoduleCfg: [],
                        userRemoteConfigs: [[credentialsId: "${GIT_CREDS}",
                        url: 'git@github.com:funi-main/source2-main.git']]
                    ])
                }
            }
        }

        stage('Build') {
            steps {
                sh ''' #!/bin/bash
                sed -i "s/BUILD_NUMBER_PLACEHOLDER/${BUILD_NUMBER}/g" source2-main/nodebb/Dockerfile
                sed -i "s/JENKINS_JOB_NAME_PLACEHOLDER/${JOB_NAME}/g" source2-main/nodebb/Dockerfile
                sed -i "s/GIT_TAG_PLACEHOLDER/${JGIT_TAG:-Untagged}/g" source2-main/nodebb/Dockerfile
                sed -i "s/GIT_BRANCH_PLACEHOLDER/${WORK_BRANCH}/g" source2-main/nodebb/Dockerfile

                $(aws ecr get-login --region=us-west-2 --no-include-email)

                rm -rf source2-main/nodebb/nodebb
                mv forum source2-main/nodebb/nodebb
                '''
                script {
                    if ("${WORK_BRANCH}" == "prod") {
                        env.WORK_BRANCH = "pre-prod"
                    }
                }

                /* sh '''#!/bin/bash
                docker build \
                --pull \
                --cache-from ${DOCKER_BUILD}:latest \
                -t ${DOCKER_BUILD}:latest \
                -t ${DOCKER_BUILD}:${JGIT_TAG} \
                -f source2-main/nodebb/Dockerfile ./source2-main/nodebb
                #docker push ${DOCKER_BUILD}:latest
                #docker push ${DOCKER_BUILD}:${JGIT_TAG}
                ''' */
            }
        }

        stage('Deploy') {
            steps {
                sh '''#!/bin/bash
                if [ $WORK_BRANCH == "develop" ]; then
                echo $WORK_BRANCH
                #ecs deploy VENUE-DEV --region us-west-2 forum -t ${JGIT_TAG} || true
                fi

                if [ $WORK_BRANCH == "qa" ]; then
                echo $WORK_BRANCH
                #ecs deploy VENUE-QA --region us-west-2 forum -t ${JGIT_TAG} || true
                fi

                if [ $WORK_BRANCH == "uat" ]; then
                echo $WORK_BRANCH
                #ecs deploy VENUE-UAT --region us-west-2 forum -t ${JGIT_TAG} || true
                fi

                if [ $WORK_BRANCH == "pre-prod" ]; then
                echo $WORK_BRANCH
                #ecs deploy VENUE-PRE-PROD --region us-west-2 forum -t ${JGIT_TAG} || true
                fi
                '''
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
